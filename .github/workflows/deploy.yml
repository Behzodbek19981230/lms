name: CI/CD LMS

on:
    push:
        branches:
            - main

jobs:
    # ===== BACKEND CI/CD =====
    backend:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js for Backend
              uses: actions/setup-node@v3
              with:
                  node-version: '20.x'
                  cache: 'npm'
                  cache-dependency-path: backend/package-lock.json

            - name: Install backend dependencies
              run: |
                  cd backend
                  npm ci --legacy-peer-deps --prefer-offline
            - name: Build backend
              run: |
                  cd backend
                  npm run build
            - name: Deploy Backend via SSH
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: 45.138.159.166
                  username: deploy
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script: |
                      export NVM_DIR="$HOME/.nvm"
                      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
                      export PATH=$NVM_DIR/versions/node/v22.18.0/bin:$PATH
                      cd /var/www/lms/backend
                      git reset --hard
                      git clean -fd
                      git pull origin main
                      npm install --legacy-peer-deps
                      npm run build
                      npm run migration:run
                      # pm2 bilan ishga tushirish / restart
                      pm2 stop lms-backend || true
                      fuser -k 3003/tcp || true
                      pm2 delete lms-backend || echo "Old process not found"
                      pm2 start npm --name "lms-backend" -- run start:prod -- --port 3003
    # ===== FRONTEND CI/CD =====
    frontend:
        runs-on: ubuntu-latest
        needs: backend
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js for Frontend
              uses: actions/setup-node@v3
              with:
                  node-version: '21.x' # Frontend uchun Node.js 21+ kerak
                  cache: 'npm'
                  cache-dependency-path: frontend/package-lock.json

            - name: Cache node modules
              uses: actions/cache@v3
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-node-frontend-${{ hashFiles('frontend/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-frontend-
            - name: Install frontend dependencies
              run: |
                  cd frontend
                  npm ci --legacy-peer-deps --prefer-offline
            - name: Build frontend
              run: |
                  cd frontend
                  npm run build
            - name: Deploy Frontend via SSH
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: 45.138.159.166
                  username: deploy
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script: |
                      export NVM_DIR="$HOME/.nvm"
                      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
                      export PATH=$NVM_DIR/versions/node/v22.18.0/bin:$PATH
                      cd /var/www/lms/frontend
                      git pull origin main
                      npm install --legacy-peer-deps
                      npm run build
                      echo "${{ secrets.SERVER_PASS }}" | sudo -S systemctl reload nginx
