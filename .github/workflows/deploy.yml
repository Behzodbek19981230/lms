name: CI/CD LMS

on:
  push:
    branches:
      - main

jobs:
  # ===== BACKEND CI/CD =====
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install backend dependencies
        run: |
          cd backend
          npm install --legacy-peer-deps

      - name: Build backend
        run: |
          cd backend
          npm run build

      - name: Deploy Backend via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 45.138.159.166
          username: deploy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            export PATH=$NVM_DIR/versions/node/v22.18.0/bin:$PATH

            cd /var/www/lms/backend
            git reset --hard
            git clean -fd
            git pull origin main
            npm install --legacy-peer-deps
            npm run build
            npm run migration:run

            # pm2 bilan ishga tushirish / restart
            pm2 delete lms-backend || echo "Old process not found"
            pm2 start npm --name "lms-backend" -- run start:prod -- --port 3003
            pm2 save

  # ===== FRONTEND CI/CD =====
  frontend:
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install --legacy-peer-deps

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Deploy Frontend via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 45.138.159.166
          username: deploy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            export PATH=$NVM_DIR/versions/node/v22.18.0/bin:$PATH

            cd /var/www/lms/frontend
            git pull origin main
            npm install --legacy-peer-deps
            npm run build
            echo "${{ secrets.SERVER_PASS }}" | sudo -S systemctl reload nginx
